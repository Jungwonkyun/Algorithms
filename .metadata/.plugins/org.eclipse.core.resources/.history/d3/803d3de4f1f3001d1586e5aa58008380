package algorithms;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class BlackFriday {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		int N = Integer.parseInt(st.nextToken());
		int C = Integer.parseInt(st.nextToken());
		
		int [] stuff =  new int[N];
		
		String [] in = br.readLine().split(" ");		
		for(int i = 0; i < N; i++) {
			int now = Integer.parseInt(in[i]);
			stuff[i] = now;
			
			if(now == C) {
				System.out.println(1);
				System.exit(0);
			}
		}
		
		Arrays.sort(stuff);
		if(stuff[0]>C) {
			System.out.println(0);
			System.exit(0);
		}
		
		int end = 0;
		for(int i = 0; i < N; i++) {
			if(stuff[i]>C)break;
			end = i;
		}
		
		int left = 0; 
		int right = end;
		
		while(left < right) {
			//2개 만으로 가능하다면 
			if(stuff[left]+stuff[right] == C) {
				System.out.println(1);
				System.exit(0);
			}
			
			else if(stuff[left]+stuff[right] > C) {
				left = (left+right)/2;
			}
			
			//3개로 가능한지 확인
			else {
				int temp = stuff[left]+stuff[right];
				for(int i = left; i < right; i++) {
					int tempResult = temp + stuff[i];
					if(tempResult == C) {
						System.out.println(1);
						System.exit(0);
					}	
					else if(tempResult > C)break;
				}
				right = (left+right)/2;
			}
		}
		
		System.out.println(0);
		
	}

}
